package cnk.air_commercialscalculationengine;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class BusinessRuleIntake implements java.io.Serializable
{
   private AdvancedDefinition advancedDefinition;

   private java.util.List<java.lang.String> commercialStatus;

   private java.util.List<cnk.air_commercialscalculationengine.FlightDetails> flightDetails;

   public void appendStandardCommercialHeads(String CommercialHeadName,
         String CommercialType,
         String ContractType, boolean Commissionable,
         boolean MarkDownApplicable, String MarkDownClientType,
         double MinimumMarkUpPercentage, double MaximumMarkUpPercentage,
         String MarkUpClientType)
   {
      //this.setSelectedRow(this.getCommonElements().getSupplier()+"_"+this.getCommonElements().getSupplierMarket());
      CommercialHead commercialHead = new CommercialHead(CommercialHeadName,
            null,
            CommercialType, false,
            ContractType, Commissionable,
            MarkDownApplicable, MarkDownClientType,
            MinimumMarkUpPercentage, MaximumMarkUpPercentage,
            MarkUpClientType, null);
      this.setCommercialHead(new ArrayList<CommercialHead>());
      this.getCommercialHead().add(commercialHead);

   }

   public void appendCommercialHeads(String CommercialHeadName, String NettOffCommercialHead,
         String CommercialType, boolean SettlementTransactionWise,
         String ContractType)
   {
      //this.setSelectedRow(this.getCommonElements().getSupplier()+"_"+this.getCommonElements().getSupplierMarket());
      CommercialHead commercialHead = new CommercialHead(CommercialHeadName, NettOffCommercialHead,
            CommercialType, SettlementTransactionWise,
            ContractType, false,
            false, null,
            0, 0,
            null, null);
      this.getCommercialHead().add(commercialHead);

   }


		public static boolean checkDate(String configuredInput, Date conditionValue) {
			
			try {
				String[] configuredInputList = configuredInput.split(";");
				DateFormat format = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
				
				if (configuredInputList[0].equals("LESSTHANEQUALTO")) {
					
					Date date = format.parse(configuredInputList[1]);
					return (date.after(conditionValue) || date.equals(conditionValue));
					
				} else if (configuredInputList[0].equals("GREATERTHANEQUALTO")) {

					Date date = format.parse(configuredInputList[1]);
					return (date.before(conditionValue)|| date.equals(conditionValue));
					
				} else if (configuredInputList[0].equals("BETWEEN")) {
					
					Date lowerLimit = format.parse(configuredInputList[1]);
					Date upperLimit = format.parse(configuredInputList[2]);
					return ((lowerLimit.before(conditionValue)||lowerLimit.equals(conditionValue)) && (upperLimit.after(conditionValue)||upperLimit.equals(conditionValue)));
					
				} else if (configuredInputList[0].equals("EQUALTO")) {

					Date date = format.parse(configuredInputList[1]);
					return date.equals(conditionValue);
					
				} else if (configuredInputList[0].equals("IN")) {
					
					String date=format.format(conditionValue);
					return Arrays.asList(configuredInputList[1].split("/")).contains(date);
				}
			} catch (Exception e) {
				e.printStackTrace();
			}

			return false;
		}

	  
   static final long serialVersionUID = 1L;

   private java.lang.String ruleFlowName;
   @org.kie.api.definition.type.Label("Supplier_Market combination selected for the current business rule intake")
   private java.lang.String selectedRow;

   private CommonElements commonElements;

   private java.util.List<cnk.air_commercialscalculationengine.CommercialHead> commercialHead;

   private java.util.List<cnk.air_commercialscalculationengine.SlabDetails> slabDetails;

   public BusinessRuleIntake()
   {
   }

   public java.lang.String getRuleFlowName()
   {
      return this.ruleFlowName;
   }

   public void setRuleFlowName(java.lang.String ruleFlowName)
   {
      this.ruleFlowName = ruleFlowName;
   }

   public java.lang.String getSelectedRow()
   {
      return this.selectedRow;
   }

   public void setSelectedRow(java.lang.String selectedRow)
   {
      this.selectedRow = selectedRow;
   }

   public java.util.List<cnk.air_commercialscalculationengine.CommercialHead> getCommercialHead()
   {
      return this.commercialHead;
   }

   public void setCommercialHead(
         java.util.List<cnk.air_commercialscalculationengine.CommercialHead> commercialHead)
   {
      this.commercialHead = commercialHead;
   }

   public java.util.List<cnk.air_commercialscalculationengine.SlabDetails> getSlabDetails()
   {
      return this.slabDetails;
   }

   public void setSlabDetails(
         java.util.List<cnk.air_commercialscalculationengine.SlabDetails> slabDetails)
   {
      this.slabDetails = slabDetails;
   }

   public cnk.air_commercialscalculationengine.CommonElements getCommonElements()
   {
      return this.commonElements;
   }

   public void setCommonElements(
         cnk.air_commercialscalculationengine.CommonElements commonElements)
   {
      this.commonElements = commonElements;
   }

   public cnk.air_commercialscalculationengine.AdvancedDefinition getAdvancedDefinition()
   {
      return this.advancedDefinition;
   }

   public void setAdvancedDefinition(
         cnk.air_commercialscalculationengine.AdvancedDefinition advancedDefinition)
   {
      this.advancedDefinition = advancedDefinition;
   }

   public java.util.List<java.lang.String> getCommercialStatus()
   {
      return this.commercialStatus;
   }

   public void setCommercialStatus(
         java.util.List<java.lang.String> commercialStatus)
   {
      this.commercialStatus = commercialStatus;
   }

   public java.util.List<cnk.air_commercialscalculationengine.FlightDetails> getFlightDetails()
   {
      return this.flightDetails;
   }

   public void setFlightDetails(
         java.util.List<cnk.air_commercialscalculationengine.FlightDetails> flightDetails)
   {
      this.flightDetails = flightDetails;
   }

   public BusinessRuleIntake(
         cnk.air_commercialscalculationengine.AdvancedDefinition advancedDefinition,
         java.util.List<java.lang.String> commercialStatus,
         java.util.List<cnk.air_commercialscalculationengine.FlightDetails> flightDetails,
         java.lang.String ruleFlowName,
         java.lang.String selectedRow,
         cnk.air_commercialscalculationengine.CommonElements commonElements,
         java.util.List<cnk.air_commercialscalculationengine.CommercialHead> commercialHead,
         java.util.List<cnk.air_commercialscalculationengine.SlabDetails> slabDetails)
   {
      this.advancedDefinition = advancedDefinition;
      this.commercialStatus = commercialStatus;
      this.flightDetails = flightDetails;
      this.ruleFlowName = ruleFlowName;
      this.selectedRow = selectedRow;
      this.commonElements = commonElements;
      this.commercialHead = commercialHead;
      this.slabDetails = slabDetails;
   }

}